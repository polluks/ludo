;
; File generated by co65 v 2.18 - Git c59e8277 using model 'none'
;
.fopt		compiler,"co65 v 2.18 - Git c59e8277"
.case		on
.debuginfo	off

_DecodedByte = ZEROPAGE+0
.export	_DecodedByte
_DecodeBitCounter = ZEROPAGE+1
.export	_DecodeBitCounter
_DecodedResult = ZEROPAGE+2
.export	_DecodedResult
_CurrentAYRegister = ZEROPAGE+3
.export	_CurrentAYRegister
_RegisterBufferHigh = ZEROPAGE+4
.export	_RegisterBufferHigh
_BufferFrameOffset = ZEROPAGE+5
.export	_BufferFrameOffset
_MusicResetCounter = ZEROPAGE+6
.export	_MusicResetCounter
_CurrentFrame = ZEROPAGE+8
.export	_CurrentFrame
_PlayerVbl = ZEROPAGE+9
.export	_PlayerVbl
_MusicLooped = ZEROPAGE+10
.export	_MusicLooped
_FrameLoadBalancer = ZEROPAGE+11
.export	_FrameLoadBalancer
_startmusic = CODE+0
.export	_startmusic
__auto_1 = CODE+61
.export	__auto_1
__auto_3 = CODE+75
.export	__auto_3
__auto_5 = CODE+95
.export	__auto_5
__auto_2 = CODE+67
.export	__auto_2
__auto_4 = CODE+80
.export	__auto_4
__auto_6 = CODE+101
.export	__auto_6
jmp_old_handler = CODE+152
.export	jmp_old_handler
irq_handler = CODE+129
.export	irq_handler
_Mym_Initialize = CODE+230
.export	_Mym_Initialize
_endmusic = CODE+89
.export	_endmusic
WriteRegister = CODE+155
.export	WriteRegister
_50hzFlipFlop = CODE+128
.export	_50hzFlipFlop
skipFrame = CODE+147
.export	skipFrame
_Mym_PlayFrame = CODE+319
.export	_Mym_PlayFrame
_PlayerCount = CODE+204
.export	_PlayerCount
_PlayerRegValues = CODE+205
.export	_PlayerRegValues
_RegisterChanAFrequency = CODE+205
.export	_RegisterChanAFrequency
_RegisterChanBFrequency = CODE+207
.export	_RegisterChanBFrequency
_RegisterChanCFrequency = CODE+209
.export	_RegisterChanCFrequency
_RegisterChanNoiseFrequency = CODE+211
.export	_RegisterChanNoiseFrequency
_RegisterChanAVolume = CODE+213
.export	_RegisterChanAVolume
_RegisterChanBVolume = CODE+214
.export	_RegisterChanBVolume
_RegisterChanCVolume = CODE+215
.export	_RegisterChanCVolume
_PlayerRegCurrentValue = CODE+219
.export	_PlayerRegCurrentValue
_Mym_ReInitialize = CODE+220
.export	_Mym_ReInitialize
__auto_music_ptr = CODE+430
.export	__auto_music_ptr
_PlayerUnpackRegister2 = CODE+459
.export	_PlayerUnpackRegister2
_PlayerUnpackRegister = CODE+452
.export	_PlayerUnpackRegister
_ReadBits = CODE+417
.export	_ReadBits
loop_read_bits = CODE+422
.export	loop_read_bits
end_reload = CODE+443
.export	end_reload
DecompressFragment = CODE+509
.export	DecompressFragment
UnchangedFragment = CODE+476
.export	UnchangedFragment
player_main_return = CODE+498
.export	player_main_return
decompressFragmentLoop = CODE+513
.export	decompressFragmentLoop
player_copy_packed_loop = CODE+513
.export	player_copy_packed_loop
PlayerNotCopyLast = CODE+546
.export	PlayerNotCopyLast
UnchangedRegister = CODE+522
.export	UnchangedRegister
player_return = CODE+537
.export	player_return
DecompressWithOffset = CODE+587
.export	DecompressWithOffset
ReadNewRegisterValue = CODE+555
.export	ReadNewRegisterValue
_PlayerRegBits = CODE+638
.export	_PlayerRegBits
player_read_new = CODE+579
.export	player_read_new

;
; CODE SEGMENT
;
.segment	"CODE"
CODE:
	.byte	$08
	.byte	$48
	.byte	$78
	.byte	$18
	.byte	$AD
	.byte	$FE
	.byte	$FF
	.byte	$69
	.byte	$01
	.byte	$8D
	.word	CODE+62
	.byte	$8D
	.word	CODE+76
	.byte	$8D
	.word	CODE+96
	.byte	$AD
	.byte	$FF
	.byte	$FF
	.byte	$69
	.byte	$00
	.byte	$8D
	.word	CODE+63
	.byte	$8D
	.word	CODE+77
	.byte	$8D
	.word	CODE+97
	.byte	$18
	.byte	$AD
	.byte	$FE
	.byte	$FF
	.byte	$69
	.byte	$02
	.byte	$8D
	.word	CODE+68
	.byte	$8D
	.word	CODE+81
	.byte	$8D
	.word	CODE+102
	.byte	$AD
	.byte	$FF
	.byte	$FF
	.byte	$69
	.byte	$00
	.byte	$8D
	.word	CODE+69
	.byte	$8D
	.word	CODE+82
	.byte	$8D
	.word	CODE+103
	.byte	$AD
	.byte	$45
	.byte	$02
	.byte	$8D
	.word	CODE+153
	.byte	$AD
	.byte	$46
	.byte	$02
	.byte	$8D
	.word	CODE+154
	.byte	$A9
	.byte	<(CODE-3967)
	.byte	$8D
	.byte	$45
	.byte	$02
	.byte	$A9
	.byte	>(CODE+129)
	.byte	$8D
	.byte	$46
	.byte	$02
	.byte	$20
	.word	CODE+230
	.byte	$68
	.byte	$28
	.byte	$60
	.byte	$08
	.byte	$48
	.byte	$78
	.byte	$AD
	.word	CODE+153
	.byte	$8D
	.byte	$45
	.byte	$02
	.byte	$AD
	.word	CODE+154
	.byte	$8D
	.byte	$46
	.byte	$02
	.byte	$A9
	.byte	$08
	.byte	$A2
	.byte	$00
	.byte	$20
	.word	CODE+155
	.byte	$A9
	.byte	$09
	.byte	$A2
	.byte	$00
	.byte	$20
	.word	CODE+155
	.byte	$A9
	.byte	$0A
	.byte	$A2
	.byte	$00
	.byte	$20
	.word	CODE+155
	.byte	$68
	.byte	$28
	.byte	$60
	.byte	$00
	.byte	$48
	.byte	$8A
	.byte	$48
	.byte	$98
	.byte	$48
	.byte	$AD
	.word	CODE+128
	.byte	$49
	.byte	$01
	.byte	$8D
	.word	CODE+128
	.byte	$F0
	.byte	$03
	.byte	$20
	.word	CODE+319
	.byte	$68
	.byte	$A8
	.byte	$68
	.byte	$AA
	.byte	$68
	.byte	$4C
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$78
	.byte	$8D
	.byte	$0F
	.byte	$03
	.byte	$A8
	.byte	$8A
	.byte	$C0
	.byte	$07
	.byte	$D0
	.byte	$02
	.byte	$09
	.byte	$40
	.byte	$48
	.byte	$AD
	.byte	$0C
	.byte	$03
	.byte	$09
	.byte	$EE
	.byte	$8D
	.byte	$0C
	.byte	$03
	.byte	$29
	.byte	$11
	.byte	$09
	.byte	$CC
	.byte	$8D
	.byte	$0C
	.byte	$03
	.byte	$AA
	.byte	$68
	.byte	$8D
	.byte	$0F
	.byte	$03
	.byte	$8A
	.byte	$09
	.byte	$EC
	.byte	$8D
	.byte	$0C
	.byte	$03
	.byte	$29
	.byte	$11
	.byte	$09
	.byte	$CC
	.byte	$8D
	.byte	$0C
	.byte	$03
	.byte	$28
	.byte	$60
	.byte	$00
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$04
	.byte	$05
	.byte	$08
	.byte	$05
	.byte	$05
	.byte	$05
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$00
	.byte	$78
	.byte	$A9
	.byte	$00
	.byte	$85
	.byte	<(ZEROPAGE+10)
	.byte	$20
	.word	CODE+230
	.byte	$58
	.byte	$60
	.byte	$AE
	.byte	$00
	.byte	$76
	.byte	$86
	.byte	<(ZEROPAGE+6)
	.byte	$AE
	.byte	$01
	.byte	$76
	.byte	$E8
	.byte	$86
	.byte	<(ZEROPAGE+7)
	.byte	$A9
	.byte	$02
	.byte	$8D
	.word	CODE+431
	.byte	$A9
	.byte	$76
	.byte	$8D
	.word	CODE+432
	.byte	$A9
	.byte	$01
	.byte	$85
	.byte	<(ZEROPAGE+1)
	.byte	$A9
	.byte	$00
	.byte	$85
	.byte	<(ZEROPAGE+2)
	.byte	$85
	.byte	<(ZEROPAGE+0)
	.byte	$85
	.byte	<(ZEROPAGE+9)
	.byte	$8D
	.word	CODE+219
	.byte	$85
	.byte	<(ZEROPAGE+5)
	.byte	$8D
	.word	CODE+204
	.byte	$85
	.byte	<(ZEROPAGE+3)
	.byte	$85
	.byte	<(ZEROPAGE+8)
	.byte	$A2
	.byte	$0E
	.byte	$CA
	.byte	$9D
	.word	CODE+205
	.byte	$D0
	.byte	$FA
	.byte	$A9
	.byte	$68
	.byte	$85
	.byte	<(ZEROPAGE+4)
	.byte	$A2
	.byte	$00
	.byte	$86
	.byte	<(ZEROPAGE+3)
	.byte	$20
	.word	CODE+459
	.byte	$A6
	.byte	<(ZEROPAGE+3)
	.byte	$E8
	.byte	$E0
	.byte	$0E
	.byte	$D0
	.byte	$F4
	.byte	$A9
	.byte	$80
	.byte	$85
	.byte	<(ZEROPAGE+9)
	.byte	$A9
	.byte	$00
	.byte	$8D
	.word	CODE+204
	.byte	$85
	.byte	<(ZEROPAGE+3)
	.byte	$85
	.byte	<(ZEROPAGE+8)
	.byte	$A9
	.byte	$09
	.byte	$85
	.byte	<(ZEROPAGE+11)
	.byte	$60
	.byte	$C6
	.byte	<(ZEROPAGE+6)
	.byte	$D0
	.byte	$0B
	.byte	$C6
	.byte	<(ZEROPAGE+7)
	.byte	$D0
	.byte	$07
	.byte	$A9
	.byte	$01
	.byte	$85
	.byte	<(ZEROPAGE+10)
	.byte	$20
	.word	CODE+230
	.byte	$A5
	.byte	<(ZEROPAGE+8)
	.byte	$8D
	.word	CODE+347
	.byte	$A9
	.byte	$68
	.byte	$8D
	.word	CODE+348
	.byte	$A0
	.byte	$00
	.byte	$AE
	.byte	$00
	.byte	$68
	.byte	$48
	.byte	$98
	.byte	$48
	.byte	$20
	.word	CODE+155
	.byte	$68
	.byte	$A8
	.byte	$68
	.byte	$EE
	.word	CODE+348
	.byte	$C8
	.byte	$C0
	.byte	$0E
	.byte	$D0
	.byte	$EC
	.byte	$E6
	.byte	<(ZEROPAGE+8)
	.byte	$EE
	.word	CODE+204
	.byte	$A5
	.byte	<(ZEROPAGE+3)
	.byte	$C9
	.byte	$0E
	.byte	$B0
	.byte	$0E
	.byte	$C6
	.byte	<(ZEROPAGE+11)
	.byte	$D0
	.byte	$09
	.byte	$20
	.word	CODE+452
	.byte	$E6
	.byte	<(ZEROPAGE+3)
	.byte	$A9
	.byte	$09
	.byte	$85
	.byte	<(ZEROPAGE+11)
	.byte	$60
	.byte	$AD
	.word	CODE+204
	.byte	$C9
	.byte	$80
	.byte	$90
	.byte	$12
	.byte	$A9
	.byte	$00
	.byte	$85
	.byte	<(ZEROPAGE+3)
	.byte	$8D
	.word	CODE+204
	.byte	$A9
	.byte	$09
	.byte	$85
	.byte	<(ZEROPAGE+11)
	.byte	$18
	.byte	$A5
	.byte	<(ZEROPAGE+9)
	.byte	$69
	.byte	$80
	.byte	$85
	.byte	<(ZEROPAGE+9)
	.byte	$60
	.byte	$48
	.byte	$A9
	.byte	$00
	.byte	$85
	.byte	<(ZEROPAGE+2)
	.byte	$C6
	.byte	<(ZEROPAGE+1)
	.byte	$D0
	.byte	$11
	.byte	$A9
	.byte	$08
	.byte	$85
	.byte	<(ZEROPAGE+1)
	.byte	$AD
	.byte	$02
	.byte	$76
	.byte	$85
	.byte	<(ZEROPAGE+0)
	.byte	$EE
	.word	CODE+431
	.byte	$D0
	.byte	$03
	.byte	$EE
	.word	CODE+432
	.byte	$06
	.byte	<(ZEROPAGE+0)
	.byte	$26
	.byte	<(ZEROPAGE+2)
	.byte	$CA
	.byte	$D0
	.byte	$E4
	.byte	$68
	.byte	$60
	.byte	$A9
	.byte	$68
	.byte	$18
	.byte	$65
	.byte	<(ZEROPAGE+3)
	.byte	$85
	.byte	<(ZEROPAGE+4)
	.byte	$A6
	.byte	<(ZEROPAGE+3)
	.byte	$BD
	.word	CODE+205
	.byte	$8D
	.word	CODE+219
	.byte	$A2
	.byte	$01
	.byte	$20
	.word	CODE+417
	.byte	$A6
	.byte	<(ZEROPAGE+2)
	.byte	$D0
	.byte	$21
	.byte	$A5
	.byte	<(ZEROPAGE+4)
	.byte	$8D
	.word	CODE+490
	.byte	$A2
	.byte	$80
	.byte	$AD
	.word	CODE+219
	.byte	$A4
	.byte	<(ZEROPAGE+9)
	.byte	$99
	.byte	$00
	.byte	$68
	.byte	$C8
	.byte	$CA
	.byte	$D0
	.byte	$F9
	.byte	$4C
	.word	CODE+498
	.byte	$A6
	.byte	<(ZEROPAGE+3)
	.byte	$AD
	.word	CODE+219
	.byte	$9D
	.word	CODE+205
	.byte	$E6
	.byte	<(ZEROPAGE+4)
	.byte	$60
	.byte	$A5
	.byte	<(ZEROPAGE+9)
	.byte	$85
	.byte	<(ZEROPAGE+5)
	.byte	$A2
	.byte	$01
	.byte	$20
	.word	CODE+417
	.byte	$A6
	.byte	<(ZEROPAGE+2)
	.byte	$D0
	.byte	$18
	.byte	$A5
	.byte	<(ZEROPAGE+4)
	.byte	$8D
	.word	CODE+534
	.byte	$A6
	.byte	<(ZEROPAGE+5)
	.byte	$AD
	.word	CODE+219
	.byte	$9D
	.byte	$00
	.byte	$68
	.byte	$E6
	.byte	<(ZEROPAGE+5)
	.byte	$A5
	.byte	<(ZEROPAGE+5)
	.byte	$29
	.byte	$7F
	.byte	$D0
	.byte	$E2
	.byte	$4C
	.word	CODE+498
	.byte	$A2
	.byte	$01
	.byte	$20
	.word	CODE+417
	.byte	$A6
	.byte	<(ZEROPAGE+2)
	.byte	$F0
	.byte	$20
	.byte	$A6
	.byte	<(ZEROPAGE+3)
	.byte	$BD
	.word	CODE+638
	.byte	$AA
	.byte	$20
	.word	CODE+417
	.byte	$A6
	.byte	<(ZEROPAGE+2)
	.byte	$8E
	.word	CODE+219
	.byte	$A5
	.byte	<(ZEROPAGE+4)
	.byte	$8D
	.word	CODE+581
	.byte	$A6
	.byte	<(ZEROPAGE+5)
	.byte	$AD
	.word	CODE+219
	.byte	$9D
	.byte	$00
	.byte	$68
	.byte	$E6
	.byte	<(ZEROPAGE+5)
	.byte	$4C
	.word	CODE+537
	.byte	$A2
	.byte	$07
	.byte	$20
	.word	CODE+417
	.byte	$A5
	.byte	<(ZEROPAGE+4)
	.byte	$8D
	.word	CODE+624
	.byte	$8D
	.word	CODE+620
	.byte	$A5
	.byte	<(ZEROPAGE+5)
	.byte	$18
	.byte	$65
	.byte	<(ZEROPAGE+2)
	.byte	$38
	.byte	$E9
	.byte	$80
	.byte	$A8
	.byte	$A2
	.byte	$07
	.byte	$20
	.word	CODE+417
	.byte	$E6
	.byte	<(ZEROPAGE+2)
	.byte	$A6
	.byte	<(ZEROPAGE+5)
	.byte	$B9
	.byte	$00
	.byte	$68
	.byte	$C8
	.byte	$9D
	.byte	$00
	.byte	$68
	.byte	$E6
	.byte	<(ZEROPAGE+5)
	.byte	$E8
	.byte	$C6
	.byte	<(ZEROPAGE+2)
	.byte	$D0
	.byte	$F2
	.byte	$8D
	.word	CODE+219
	.byte	$4C
	.word	CODE+537
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$04
	.byte	$08
	.byte	$04
	.byte	$05
	.byte	$08
	.byte	$05
	.byte	$05
	.byte	$05
	.byte	$08
	.byte	$08
	.byte	$08

;
; DATA SEGMENT
;
.segment	"DATA"
DATA:

;
; BSS SEGMENT
;
.segment	"BSS"
BSS:
	.res	0

;
; ZEROPAGE SEGMENT
;
.segment	"ZEROPAGE": zeropage
ZEROPAGE:
	.res	12

.end
